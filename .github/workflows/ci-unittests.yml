name: CI unittests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  POSTGRES_PASSWORD: secret
  POSTGRES_USER: auth
  POSTGRES_DB: auth
  POSTGRES_HOST: 127.0.0.1
  POSTGRES_PORT: 5432
  SECRET_KEY: testsecretkey
  REDIS_LOCATION: redis://192.168.10.1:6379/0


jobs:
  unittests:

    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, '#notest')"

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    services:
      postgres:
        image: postgres:13.4-alpine3.14
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: auth
          POSTGRES_DB: auth
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:6.2.5-alpine3.14
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Create DB schemas
      run: |
        alembic upgrade head
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Pytest with Coverage 
      run: |
        pytest -v --cov=. --cov-report=term-missing --cov-fail-under=50
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  docker_build_and_push:
    needs:
      - unittests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '#nobuild')"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Prepare tags
      id: prepare
      run: |
        TAGS=${{ github.repository }}:sha-${GITHUB_SHA:0:7}
        if [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.pull_request.number }}-merge
          TAGS="$TAGS,${{ github.repository }}:${VERSION}"
        fi
        if [[ $GITHUB_REF == ref/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          TAGS="$TAGS,${{ github.repository }}:${VERSION}"
        fi
        if [[ $GITHUB_REF == refs/heads/master ]]; then
          VERSION=latest
          TAGS="$TAGS,${{ github.repository }}:${VERSION}"
        fi
        echo "$GITHUB_REF"
        echo "${TAGS}"
        echo ::set-output name=tags::${TAGS}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.prepare.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
